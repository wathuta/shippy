// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	vessel "vessel_service/proto/vessel"
)

// VesselServiceHandler is an autogenerated mock type for the VesselServiceHandler type
type VesselServiceHandler struct {
	mock.Mock
}

// CreateVessel provides a mock function with given fields: ctx, in, out
func (_m *VesselServiceHandler) CreateVessel(ctx context.Context, in *vessel.Vessel, out *vessel.Response) error {
	ret := _m.Called(ctx, in, out)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *vessel.Vessel, *vessel.Response) error); ok {
		r0 = rf(ctx, in, out)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindAvailableVessel provides a mock function with given fields: ctx, req, res
func (_m *VesselServiceHandler) FindAvailableVessel(ctx context.Context, req *vessel.Specification, res *vessel.Response) error {
	ret := _m.Called(ctx, req, res)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *vessel.Specification, *vessel.Response) error); ok {
		r0 = rf(ctx, req, res)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewVesselServiceHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewVesselServiceHandler creates a new instance of VesselServiceHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewVesselServiceHandler(t mockConstructorTestingTNewVesselServiceHandler) *VesselServiceHandler {
	mock := &VesselServiceHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
